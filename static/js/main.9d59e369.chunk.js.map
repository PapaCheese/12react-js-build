{"version":3,"sources":["assets/go.png","assets/PRESETS.png","assets/ADD PRESET.png","assets/CANCEL.png","assets/SAVE.png","assets/STOP.png","assets/chita.gif","pages/Splash.js","assets/EDIT.png","assets/DELETE.png","pages/Presets.js","pages/CreatePreset.js","assets/PRO.png","assets/SHARE.png","assets/LEARN.png","assets/RESET.png","assets/KIT.png","Links.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Splash","className","src","chita","Presets","dummyData","queue","name","repeat","style","width","map","preset","type","defaultValue","editIcon","deletIcon","CreatePreset","pages","inputs","useState","currentPage","setCurrentPage","handlePageClicked","event","target","value","handleChange","_id","id","_id_int","parseInt","slice","_id_string","toString","document","getElementById","focus","handleFocused","onClick","item","placeholder","maxLength","onChange","onFocus","Links","proIcon","shareIcon","learnIcon","resetIcon","kitIcon","window","open","App","onGoPressed","onPresetsPressed","onCreatePresetPressed","onCreatePresetCancelPressed","onCreatePresetSavePressed","onGoStopPressed","getCurrentPage","goIcon","addPresetIcon","cancelIcon","saveIcon","stopIcon","presetsIcon","useEffect","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9d59e369.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/go.a432093a.png\";","export default __webpack_public_path__ + \"static/media/PRESETS.f29c75bc.png\";","export default __webpack_public_path__ + \"static/media/ADD PRESET.cf36ed4b.png\";","export default __webpack_public_path__ + \"static/media/CANCEL.55c1191e.png\";","export default __webpack_public_path__ + \"static/media/SAVE.966e148c.png\";","export default __webpack_public_path__ + \"static/media/STOP.777f34d1.png\";","export default __webpack_public_path__ + \"static/media/chita.060d8b71.gif\";","import React from 'react'\r\nimport chita from \"../assets/chita.gif\"\r\n\r\n\r\nfunction Splash() {\r\n    return (\r\n        <div className=\"splash-div\">\r\n            <div className=\"logo\">\r\n                Want To React?\r\n                <br />\r\n                <span className=\"logo big\">\r\n                    12REACT\r\n                </span>\r\n                <br />\r\n                <span className=\"logo small\">\r\n                    The Best U Can B\r\n                </span>\r\n                <br />\r\n                <img src={chita} className=\"logo-chita\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Splash\r\n","export default __webpack_public_path__ + \"static/media/EDIT.0467500a.png\";","export default __webpack_public_path__ + \"static/media/DELETE.b7dd0dfb.png\";","import React from 'react'\r\n\r\nimport editIcon from \"../assets/EDIT.png\"\r\nimport deletIcon from \"../assets/DELETE.png\"\r\n\r\n\r\nfunction Presets() {\r\n    const dummyData = [\r\n        {\r\n            queue: 0,\r\n            name: \"preset 1\",\r\n            repeat: 1,\r\n        },\r\n        {\r\n            queue: 0,\r\n            name: \"preset 2\",\r\n            repeat: 1,\r\n        },\r\n        {\r\n            queue: 0,\r\n            name: \"preset 3\",\r\n            repeat: 1,\r\n        },\r\n        {\r\n            queue: 0,\r\n            name: \"preset 4\",\r\n            repeat: 1,\r\n        },\r\n    ]\r\n\r\n    function renderTableData() {\r\n        return dummyData.map((preset) => {\r\n            const { queue, name, repeat } = preset //destructuring\r\n            return (\r\n                <tr key={name}>\r\n                    <td >{queue}</td>\r\n                    <td>{name}</td>\r\n                    <td >\r\n                        <input type=\"text\" defaultValue={repeat} />\r\n                    </td>\r\n                    <td >\r\n                        <img className=\"table-button\" src={editIcon} />\r\n                    </td>\r\n                    <td >\r\n                        <img className=\"table-button\" src={deletIcon} />\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{ width: \"10%\" }}>queue</th>\r\n                        <th>name</th>\r\n                        <th style={{ width: \"10%\" }}>repeat</th>\r\n                        <th style={{ width: \"10%\" }}>edit</th>\r\n                        <th style={{ width: \"10%\" }}>delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderTableData()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Presets\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\nfunction CreatePreset() {\r\n    const pages =\r\n    {\r\n        DRILLS: \"DRILLS\",\r\n        TIME: \"TIME\",\r\n        SETS: \"SETS\",\r\n    }\r\n\r\n    const inputs = [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\"]\r\n\r\n    const [currentPage, setCurrentPage] = useState(pages.DRILLS);\r\n\r\n    function handlePageClicked(event) {\r\n        setCurrentPage(event.target.value)\r\n    }\r\n\r\n\r\n    function handleChange(event) {\r\n        var _id = event.target.id\r\n        var _id_int = parseInt(_id.slice(10, 12)) + 1\r\n        let _id_string = _id_int.toString()\r\n        if (_id_int < 10) {\r\n            _id_string = \"0\" + _id_int.toString()\r\n        }\r\n        if (_id_int == 15) {\r\n            return\r\n        }\r\n        document.getElementById(\"set-input-\" + _id_string).focus()\r\n    }\r\n\r\n    function handleFocused(event) {\r\n        document.getElementById(event.target.id).value = \"\"\r\n    }\r\n\r\n    function getCurrentPage() {\r\n        if (currentPage === pages.DRILLS) {\r\n            return (\r\n                <div className=\"input-grid\">\r\n                    {inputs.map((item) => (\r\n                        <input key={item} id={\"set-input-\" + item} type=\"text\" className=\"input-grid-item\" placeholder=\"-\" maxLength=\"1\" onChange={handleChange} onFocus={handleFocused} />\r\n                    ))}\r\n                </div>\r\n            )\r\n        }\r\n        if (currentPage === pages.TIME) {\r\n            return (\r\n                <div>\r\n                    <div className=\"input-two-grid\">\r\n                        <input type=\"number\" id=\"min-time\" className=\"input-grid-item\" placeholder=\"Minimum Seconds\" />\r\n                        <p >-</p>\r\n                        <input type=\"number\" id=\"max-time\" className=\"input-grid-item\" placeholder=\"Maximum Seconds\" />\r\n                    </div>\r\n                    <p className=\"big-description\">Set the maximum and minimum time between drills</p>\r\n                </div>\r\n            )\r\n        }\r\n        if (currentPage === pages.SETS) {\r\n            return (\r\n                <div>\r\n                    <div className=\"input-two-grid\">\r\n                        <input type=\"number\" id=\"work-time\" className=\"input-grid-item\" placeholder=\"Work Time (Seconds)\" />\r\n                        <p >-</p>\r\n                        <input type=\"number\" id=\"break-time\" className=\"input-grid-item\" placeholder=\"Break Time (Seconds)\" />\r\n                    </div>\r\n                    <p className=\"big-description\">Set how long sets and breaks should be</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"tab\" value={pages.DRILLS} onClick={handlePageClicked}>DRILLS</button>\r\n            <button className=\"tab\" value={pages.TIME} onClick={handlePageClicked}>TIME</button>\r\n            <button className=\"tab\" value={pages.SETS} onClick={handlePageClicked}>SETS</button>\r\n            {getCurrentPage()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePreset\r\n","export default __webpack_public_path__ + \"static/media/PRO.7d4ae8f7.png\";","export default __webpack_public_path__ + \"static/media/SHARE.72241eb0.png\";","export default __webpack_public_path__ + \"static/media/LEARN.702ddc0e.png\";","export default __webpack_public_path__ + \"static/media/RESET.0760be60.png\";","export default __webpack_public_path__ + \"static/media/KIT.973e2ba0.png\";","import React from 'react'\r\n\r\nimport proIcon from \"./assets/PRO.png\"\r\nimport shareIcon from \"./assets/SHARE.png\"\r\nimport learnIcon from \"./assets/LEARN.png\"\r\nimport resetIcon from \"./assets/RESET.png\"\r\nimport kitIcon from \"./assets/KIT.png\"\r\n\r\n\r\nfunction Links() {\r\n    return (\r\n        <div className=\"footer-links\">\r\n            <img className=\"nav-button\" src={proIcon} />\r\n            <img className=\"nav-button\" src={shareIcon} />\r\n            <img className=\"nav-button\" src={learnIcon} />\r\n            <img className=\"nav-button\" src={resetIcon} />\r\n            <img className=\"nav-button\" src={kitIcon} onClick={() => window.open(\"http://12react.com/12react-kit.html\", \"_blank\")} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Links\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './MainWhite.css';\n\nimport goIcon from \"./assets/go.png\"\nimport presetsIcon from \"./assets/PRESETS.png\"\nimport addPresetIcon from \"./assets/ADD PRESET.png\"\nimport cancelIcon from \"./assets/CANCEL.png\"\nimport saveIcon from \"./assets/SAVE.png\"\nimport stopIcon from \"./assets/STOP.png\"\n\nimport Splash from './pages/Splash';\nimport Presets from './pages/Presets';\nimport CreatePreset from './pages/CreatePreset';\n\nimport Links from \"./Links\"\n\nfunction App() {\n\n\n  const pages =\n  {\n    HOME: \"home\",\n    GO: \"go\",\n    PRESETS: \"presets\",\n    CREATE_PRESET: \"create-preset\",\n  }\n\n\n  const [currentPage, setCurrentPage] = useState(pages.HOME);\n\n  useEffect(() => {\n    getCurrentPage()\n  }, []);\n\n\n\n  function onGoPressed() {\n    setCurrentPage(pages.GO)\n  }\n\n  function onPresetsPressed() {\n    setCurrentPage(pages.PRESETS)\n  }\n\n  function onCreatePresetPressed() {\n    setCurrentPage(pages.CREATE_PRESET)\n  }\n\n\n  function onCreatePresetCancelPressed() {\n    setCurrentPage(pages.PRESETS)\n  }\n\n\n  function onCreatePresetSavePressed() {\n    setCurrentPage(pages.PRESETS)\n  }\n\n\n  function onGoStopPressed() {\n    setCurrentPage(pages.PRESETS)\n  }\n\n  function getCurrentPage() {\n    if (currentPage === pages.PRESETS) {\n      return (\n        <div>\n          <div className=\"nav\">\n            <img className=\"nav-button\" src={goIcon} onClick={onGoPressed} />\n            <img className=\"nav-button\" src={addPresetIcon} onClick={onCreatePresetPressed} />\n          </div>\n          <Presets />\n        </div>\n      )\n    }\n\n    if (currentPage === pages.CREATE_PRESET) {\n      return (\n        <div>\n          <div className=\"nav\">\n            <img className=\"nav-button\" src={cancelIcon} onClick={onCreatePresetCancelPressed} />\n            <img className=\"nav-button\" src={saveIcon} onClick={onCreatePresetSavePressed} />\n          </div>\n          <CreatePreset />\n        </div>\n      )\n    }\n\n    if (currentPage === pages.GO) {\n      return (\n        <div>\n          <img className=\"nav-button\" src={stopIcon} onClick={onGoStopPressed} />\n          <div className=\"current-set\">\n            D\n          </div>\n        </div>\n      )\n    }\n\n    else {\n      return (\n        <div>\n          <div className=\"nav\">\n            <img className=\"nav-button\" src={goIcon} onClick={onGoPressed} />\n            <img className=\"nav-button\" src={presetsIcon} onClick={onPresetsPressed} />\n          </div>\n          <Splash />\n        </div>\n      )\n      return\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {getCurrentPage()}\n      <Links />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}